{"version":3,"sources":["node_modules/@angular/build/src/builders/karma/polyfills/init_test_bed.js","node_modules/@angular/platform-browser-dynamic/fesm2022/testing.mjs","node_modules/@angular/platform-browser-dynamic/fesm2022/platform-browser-dynamic.mjs","node_modules/@angular/platform-browser/fesm2022/testing.mjs","node_modules/@angular/common/fesm2022/testing.mjs"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport { getTestBed } from '@angular/core/testing';\nimport { BrowserDynamicTestingModule, platformBrowserDynamicTesting } from '@angular/platform-browser-dynamic/testing';\n\n// Initialize the Angular testing environment.\ngetTestBed().initTestEnvironment(BrowserDynamicTestingModule, platformBrowserDynamicTesting(), {\n  errorOnUnknownElements: true,\n  errorOnUnknownProperties: true\n});","/**\n * @license Angular v19.2.14\n * (c) 2010-2025 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport * as i0 from '@angular/core';\nimport { createPlatformFactory, NgModule } from '@angular/core';\nimport { platformBrowserDynamic } from './platform-browser-dynamic.mjs';\nimport { BrowserTestingModule } from '@angular/platform-browser/testing';\nimport '@angular/compiler';\nimport '@angular/platform-browser';\n\n/**\n * @publicApi\n */\nconst platformBrowserDynamicTesting = createPlatformFactory(platformBrowserDynamic, 'browserDynamicTesting');\n/**\n * NgModule for testing.\n *\n * @publicApi\n */\nclass BrowserDynamicTestingModule {\n  static ɵfac = i0.ɵɵngDeclareFactory({\n    minVersion: \"12.0.0\",\n    version: \"19.2.14\",\n    ngImport: i0,\n    type: BrowserDynamicTestingModule,\n    deps: [],\n    target: i0.ɵɵFactoryTarget.NgModule\n  });\n  static ɵmod = i0.ɵɵngDeclareNgModule({\n    minVersion: \"14.0.0\",\n    version: \"19.2.14\",\n    ngImport: i0,\n    type: BrowserDynamicTestingModule,\n    exports: [BrowserTestingModule]\n  });\n  static ɵinj = i0.ɵɵngDeclareInjector({\n    minVersion: \"12.0.0\",\n    version: \"19.2.14\",\n    ngImport: i0,\n    type: BrowserDynamicTestingModule,\n    imports: [BrowserTestingModule]\n  });\n}\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\",\n  version: \"19.2.14\",\n  ngImport: i0,\n  type: BrowserDynamicTestingModule,\n  decorators: [{\n    type: NgModule,\n    args: [{\n      exports: [BrowserTestingModule]\n    }]\n  }]\n});\nexport { BrowserDynamicTestingModule, platformBrowserDynamicTesting };\n","/**\n * @license Angular v19.2.14\n * (c) 2010-2025 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport * as i0 from '@angular/core';\nimport { Version, ViewEncapsulation, Injector, Compiler, Injectable, createPlatformFactory, COMPILER_OPTIONS, CompilerFactory } from '@angular/core';\nimport { CompilerConfig, ResourceLoader } from '@angular/compiler';\nimport { platformBrowser } from '@angular/platform-browser';\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of the platform-browser-dynamic package.\n */\n/**\n * @publicApi\n */\nconst VERSION = new Version('19.2.14');\nconst COMPILER_PROVIDERS = [{\n  provide: Compiler,\n  useFactory: () => new Compiler()\n}];\n/**\n * @publicApi\n *\n * @deprecated\n * Ivy JIT mode doesn't require accessing this symbol.\n */\nclass JitCompilerFactory {\n  _defaultOptions;\n  /** @internal */\n  constructor(defaultOptions) {\n    const compilerOptions = {\n      defaultEncapsulation: ViewEncapsulation.Emulated\n    };\n    this._defaultOptions = [compilerOptions, ...defaultOptions];\n  }\n  createCompiler(options = []) {\n    const opts = _mergeOptions(this._defaultOptions.concat(options));\n    const injector = Injector.create({\n      providers: [COMPILER_PROVIDERS, {\n        provide: CompilerConfig,\n        useFactory: () => {\n          return new CompilerConfig({\n            defaultEncapsulation: opts.defaultEncapsulation,\n            preserveWhitespaces: opts.preserveWhitespaces\n          });\n        },\n        deps: []\n      }, opts.providers]\n    });\n    return injector.get(Compiler);\n  }\n}\nfunction _mergeOptions(optionsArr) {\n  return {\n    defaultEncapsulation: _lastDefined(optionsArr.map(options => options.defaultEncapsulation)),\n    providers: _mergeArrays(optionsArr.map(options => options.providers)),\n    preserveWhitespaces: _lastDefined(optionsArr.map(options => options.preserveWhitespaces))\n  };\n}\nfunction _lastDefined(args) {\n  for (let i = args.length - 1; i >= 0; i--) {\n    if (args[i] !== undefined) {\n      return args[i];\n    }\n  }\n  return undefined;\n}\nfunction _mergeArrays(parts) {\n  const result = [];\n  parts.forEach(part => part && result.push(...part));\n  return result;\n}\nclass ResourceLoaderImpl extends ResourceLoader {\n  get(url) {\n    let resolve;\n    let reject;\n    const promise = new Promise((res, rej) => {\n      resolve = res;\n      reject = rej;\n    });\n    const xhr = new XMLHttpRequest();\n    xhr.open('GET', url, true);\n    xhr.responseType = 'text';\n    xhr.onload = function () {\n      const response = xhr.response;\n      let status = xhr.status;\n      // fix status code when it is 0 (0 status is undocumented).\n      // Occurs when accessing file resources or on Android 4.1 stock browser\n      // while retrieving files from application cache.\n      if (status === 0) {\n        status = response ? 200 : 0;\n      }\n      if (200 <= status && status <= 300) {\n        resolve(response);\n      } else {\n        reject(`Failed to load ${url}`);\n      }\n    };\n    xhr.onerror = function () {\n      reject(`Failed to load ${url}`);\n    };\n    xhr.send();\n    return promise;\n  }\n  static ɵfac = i0.ɵɵngDeclareFactory({\n    minVersion: \"12.0.0\",\n    version: \"19.2.14\",\n    ngImport: i0,\n    type: ResourceLoaderImpl,\n    deps: null,\n    target: i0.ɵɵFactoryTarget.Injectable\n  });\n  static ɵprov = i0.ɵɵngDeclareInjectable({\n    minVersion: \"12.0.0\",\n    version: \"19.2.14\",\n    ngImport: i0,\n    type: ResourceLoaderImpl\n  });\n}\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\",\n  version: \"19.2.14\",\n  ngImport: i0,\n  type: ResourceLoaderImpl,\n  decorators: [{\n    type: Injectable\n  }]\n});\nconst INTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS = [{\n  provide: COMPILER_OPTIONS,\n  useValue: {\n    providers: [{\n      provide: ResourceLoader,\n      useClass: ResourceLoaderImpl,\n      deps: []\n    }]\n  },\n  multi: true\n}, {\n  provide: CompilerFactory,\n  useClass: JitCompilerFactory,\n  deps: [COMPILER_OPTIONS]\n}];\n/**\n * @publicApi\n */\nconst platformBrowserDynamic = createPlatformFactory(platformBrowser, 'browserDynamic', INTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS);\nexport { JitCompilerFactory, VERSION, platformBrowserDynamic, INTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS as ɵINTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS };\n","/**\n * @license Angular v19.2.14\n * (c) 2010-2025 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { ɵgetDOM as _getDOM, DOCUMENT, PlatformLocation } from '@angular/common';\nimport { MockPlatformLocation } from '@angular/common/testing';\nimport * as i0 from '@angular/core';\nimport { Inject, Injectable, createPlatformFactory, APP_ID, ɵinternalProvideZoneChangeDetection as _internalProvideZoneChangeDetection, ɵChangeDetectionSchedulerImpl as _ChangeDetectionSchedulerImpl, ɵChangeDetectionScheduler as _ChangeDetectionScheduler, NgModule } from '@angular/core';\nimport { TestComponentRenderer } from '@angular/core/testing';\nimport { platformBrowser, BrowserModule } from './browser-D-u-fknz.mjs';\nimport './dom_renderer-DGKzginR.mjs';\n\n/**\n * A DOM based implementation of the TestComponentRenderer.\n */\nclass DOMTestComponentRenderer extends TestComponentRenderer {\n  _doc;\n  constructor(_doc) {\n    super();\n    this._doc = _doc;\n  }\n  insertRootElement(rootElId) {\n    this.removeAllRootElementsImpl();\n    const rootElement = _getDOM().getDefaultDocument().createElement('div');\n    rootElement.setAttribute('id', rootElId);\n    this._doc.body.appendChild(rootElement);\n  }\n  removeAllRootElements() {\n    // Check whether the `DOCUMENT` instance retrieved from DI contains\n    // the necessary function to complete the cleanup. In tests that don't\n    // interact with DOM, the `DOCUMENT` might be mocked and some functions\n    // might be missing. For such tests, DOM cleanup is not required and\n    // we skip the logic if there are missing functions.\n    if (typeof this._doc.querySelectorAll === 'function') {\n      this.removeAllRootElementsImpl();\n    }\n  }\n  removeAllRootElementsImpl() {\n    const oldRoots = this._doc.querySelectorAll('[id^=root]');\n    for (let i = 0; i < oldRoots.length; i++) {\n      _getDOM().remove(oldRoots[i]);\n    }\n  }\n  static ɵfac = i0.ɵɵngDeclareFactory({\n    minVersion: \"12.0.0\",\n    version: \"19.2.14\",\n    ngImport: i0,\n    type: DOMTestComponentRenderer,\n    deps: [{\n      token: DOCUMENT\n    }],\n    target: i0.ɵɵFactoryTarget.Injectable\n  });\n  static ɵprov = i0.ɵɵngDeclareInjectable({\n    minVersion: \"12.0.0\",\n    version: \"19.2.14\",\n    ngImport: i0,\n    type: DOMTestComponentRenderer\n  });\n}\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\",\n  version: \"19.2.14\",\n  ngImport: i0,\n  type: DOMTestComponentRenderer,\n  decorators: [{\n    type: Injectable\n  }],\n  ctorParameters: () => [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }]\n});\n\n/**\n * Platform for testing\n *\n * @publicApi\n */\nconst platformBrowserTesting = createPlatformFactory(platformBrowser, 'browserTesting');\n/**\n * NgModule for testing.\n *\n * @publicApi\n */\nclass BrowserTestingModule {\n  static ɵfac = i0.ɵɵngDeclareFactory({\n    minVersion: \"12.0.0\",\n    version: \"19.2.14\",\n    ngImport: i0,\n    type: BrowserTestingModule,\n    deps: [],\n    target: i0.ɵɵFactoryTarget.NgModule\n  });\n  static ɵmod = i0.ɵɵngDeclareNgModule({\n    minVersion: \"14.0.0\",\n    version: \"19.2.14\",\n    ngImport: i0,\n    type: BrowserTestingModule,\n    exports: [BrowserModule]\n  });\n  static ɵinj = i0.ɵɵngDeclareInjector({\n    minVersion: \"12.0.0\",\n    version: \"19.2.14\",\n    ngImport: i0,\n    type: BrowserTestingModule,\n    providers: [{\n      provide: APP_ID,\n      useValue: 'a'\n    }, _internalProvideZoneChangeDetection({}), {\n      provide: _ChangeDetectionScheduler,\n      useExisting: _ChangeDetectionSchedulerImpl\n    }, {\n      provide: PlatformLocation,\n      useClass: MockPlatformLocation\n    }, {\n      provide: TestComponentRenderer,\n      useClass: DOMTestComponentRenderer\n    }],\n    imports: [BrowserModule]\n  });\n}\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\",\n  version: \"19.2.14\",\n  ngImport: i0,\n  type: BrowserTestingModule,\n  decorators: [{\n    type: NgModule,\n    args: [{\n      exports: [BrowserModule],\n      providers: [{\n        provide: APP_ID,\n        useValue: 'a'\n      }, _internalProvideZoneChangeDetection({}), {\n        provide: _ChangeDetectionScheduler,\n        useExisting: _ChangeDetectionSchedulerImpl\n      }, {\n        provide: PlatformLocation,\n        useClass: MockPlatformLocation\n      }, {\n        provide: TestComponentRenderer,\n        useClass: DOMTestComponentRenderer\n      }]\n    }]\n  }]\n});\nexport { BrowserTestingModule, platformBrowserTesting };\n","/**\n * @license Angular v19.2.14\n * (c) 2010-2025 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { ɵnormalizeQueryParams as _normalizeQueryParams, LocationStrategy } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, inject, Inject, Optional, Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { PlatformNavigation } from './platform_navigation-B45Jeakb.mjs';\nimport { ɵFakeNavigation as _FakeNavigation } from '@angular/core/testing';\nexport { ɵFakeNavigation } from '@angular/core/testing';\nimport { PlatformLocation, Location, LocationStrategy as LocationStrategy$1 } from './location-Dq4mJT-A.mjs';\nimport { DOCUMENT } from './dom_tokens-rA0ACyx7.mjs';\n\n/**\n * Parser from https://tools.ietf.org/html/rfc3986#appendix-B\n * ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?\n *  12            3  4          5       6  7        8 9\n *\n * Example: http://www.ics.uci.edu/pub/ietf/uri/#Related\n *\n * Results in:\n *\n * $1 = http:\n * $2 = http\n * $3 = //www.ics.uci.edu\n * $4 = www.ics.uci.edu\n * $5 = /pub/ietf/uri/\n * $6 = <undefined>\n * $7 = <undefined>\n * $8 = #Related\n * $9 = Related\n */\nconst urlParse = /^(([^:\\/?#]+):)?(\\/\\/([^\\/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;\nfunction parseUrl(urlStr, baseHref) {\n  const verifyProtocol = /^((http[s]?|ftp):\\/\\/)/;\n  let serverBase;\n  // URL class requires full URL. If the URL string doesn't start with protocol, we need to add\n  // an arbitrary base URL which can be removed afterward.\n  if (!verifyProtocol.test(urlStr)) {\n    serverBase = 'http://empty.com/';\n  }\n  let parsedUrl;\n  try {\n    parsedUrl = new URL(urlStr, serverBase);\n  } catch (e) {\n    const result = urlParse.exec(serverBase || '' + urlStr);\n    if (!result) {\n      throw new Error(`Invalid URL: ${urlStr} with base: ${baseHref}`);\n    }\n    const hostSplit = result[4].split(':');\n    parsedUrl = {\n      protocol: result[1],\n      hostname: hostSplit[0],\n      port: hostSplit[1] || '',\n      pathname: result[5],\n      search: result[6],\n      hash: result[8]\n    };\n  }\n  if (parsedUrl.pathname && parsedUrl.pathname.indexOf(baseHref) === 0) {\n    parsedUrl.pathname = parsedUrl.pathname.substring(baseHref.length);\n  }\n  return {\n    hostname: !serverBase && parsedUrl.hostname || '',\n    protocol: !serverBase && parsedUrl.protocol || '',\n    port: !serverBase && parsedUrl.port || '',\n    pathname: parsedUrl.pathname || '/',\n    search: parsedUrl.search || '',\n    hash: parsedUrl.hash || ''\n  };\n}\n/**\n * Provider for mock platform location config\n *\n * @publicApi\n */\nconst MOCK_PLATFORM_LOCATION_CONFIG = new InjectionToken('MOCK_PLATFORM_LOCATION_CONFIG');\n/**\n * Mock implementation of URL state.\n *\n * @publicApi\n */\nclass MockPlatformLocation {\n  baseHref = '';\n  hashUpdate = new Subject();\n  popStateSubject = new Subject();\n  urlChangeIndex = 0;\n  urlChanges = [{\n    hostname: '',\n    protocol: '',\n    port: '',\n    pathname: '/',\n    search: '',\n    hash: '',\n    state: null\n  }];\n  constructor(config) {\n    if (config) {\n      this.baseHref = config.appBaseHref || '';\n      const parsedChanges = this.parseChanges(null, config.startUrl || 'http://_empty_/', this.baseHref);\n      this.urlChanges[0] = {\n        ...parsedChanges\n      };\n    }\n  }\n  get hostname() {\n    return this.urlChanges[this.urlChangeIndex].hostname;\n  }\n  get protocol() {\n    return this.urlChanges[this.urlChangeIndex].protocol;\n  }\n  get port() {\n    return this.urlChanges[this.urlChangeIndex].port;\n  }\n  get pathname() {\n    return this.urlChanges[this.urlChangeIndex].pathname;\n  }\n  get search() {\n    return this.urlChanges[this.urlChangeIndex].search;\n  }\n  get hash() {\n    return this.urlChanges[this.urlChangeIndex].hash;\n  }\n  get state() {\n    return this.urlChanges[this.urlChangeIndex].state;\n  }\n  getBaseHrefFromDOM() {\n    return this.baseHref;\n  }\n  onPopState(fn) {\n    const subscription = this.popStateSubject.subscribe(fn);\n    return () => subscription.unsubscribe();\n  }\n  onHashChange(fn) {\n    const subscription = this.hashUpdate.subscribe(fn);\n    return () => subscription.unsubscribe();\n  }\n  get href() {\n    let url = `${this.protocol}//${this.hostname}${this.port ? ':' + this.port : ''}`;\n    url += `${this.pathname === '/' ? '' : this.pathname}${this.search}${this.hash}`;\n    return url;\n  }\n  get url() {\n    return `${this.pathname}${this.search}${this.hash}`;\n  }\n  parseChanges(state, url, baseHref = '') {\n    // When the `history.state` value is stored, it is always copied.\n    state = JSON.parse(JSON.stringify(state));\n    return {\n      ...parseUrl(url, baseHref),\n      state\n    };\n  }\n  replaceState(state, title, newUrl) {\n    const {\n      pathname,\n      search,\n      state: parsedState,\n      hash\n    } = this.parseChanges(state, newUrl);\n    this.urlChanges[this.urlChangeIndex] = {\n      ...this.urlChanges[this.urlChangeIndex],\n      pathname,\n      search,\n      hash,\n      state: parsedState\n    };\n  }\n  pushState(state, title, newUrl) {\n    const {\n      pathname,\n      search,\n      state: parsedState,\n      hash\n    } = this.parseChanges(state, newUrl);\n    if (this.urlChangeIndex > 0) {\n      this.urlChanges.splice(this.urlChangeIndex + 1);\n    }\n    this.urlChanges.push({\n      ...this.urlChanges[this.urlChangeIndex],\n      pathname,\n      search,\n      hash,\n      state: parsedState\n    });\n    this.urlChangeIndex = this.urlChanges.length - 1;\n  }\n  forward() {\n    const oldUrl = this.url;\n    const oldHash = this.hash;\n    if (this.urlChangeIndex < this.urlChanges.length) {\n      this.urlChangeIndex++;\n    }\n    this.emitEvents(oldHash, oldUrl);\n  }\n  back() {\n    const oldUrl = this.url;\n    const oldHash = this.hash;\n    if (this.urlChangeIndex > 0) {\n      this.urlChangeIndex--;\n    }\n    this.emitEvents(oldHash, oldUrl);\n  }\n  historyGo(relativePosition = 0) {\n    const oldUrl = this.url;\n    const oldHash = this.hash;\n    const nextPageIndex = this.urlChangeIndex + relativePosition;\n    if (nextPageIndex >= 0 && nextPageIndex < this.urlChanges.length) {\n      this.urlChangeIndex = nextPageIndex;\n    }\n    this.emitEvents(oldHash, oldUrl);\n  }\n  getState() {\n    return this.state;\n  }\n  /**\n   * Browsers are inconsistent in when they fire events and perform the state updates\n   * The most easiest thing to do in our mock is synchronous and that happens to match\n   * Firefox and Chrome, at least somewhat closely\n   *\n   * https://github.com/WICG/navigation-api#watching-for-navigations\n   * https://docs.google.com/document/d/1Pdve-DJ1JCGilj9Yqf5HxRJyBKSel5owgOvUJqTauwU/edit#heading=h.3ye4v71wsz94\n   * popstate is always sent before hashchange:\n   * https://developer.mozilla.org/en-US/docs/Web/API/Window/popstate_event#when_popstate_is_sent\n   */\n  emitEvents(oldHash, oldUrl) {\n    this.popStateSubject.next({\n      type: 'popstate',\n      state: this.getState(),\n      oldUrl,\n      newUrl: this.url\n    });\n    if (oldHash !== this.hash) {\n      this.hashUpdate.next({\n        type: 'hashchange',\n        state: null,\n        oldUrl,\n        newUrl: this.url\n      });\n    }\n  }\n  static ɵfac = i0.ɵɵngDeclareFactory({\n    minVersion: \"12.0.0\",\n    version: \"19.2.14\",\n    ngImport: i0,\n    type: MockPlatformLocation,\n    deps: [{\n      token: MOCK_PLATFORM_LOCATION_CONFIG,\n      optional: true\n    }],\n    target: i0.ɵɵFactoryTarget.Injectable\n  });\n  static ɵprov = i0.ɵɵngDeclareInjectable({\n    minVersion: \"12.0.0\",\n    version: \"19.2.14\",\n    ngImport: i0,\n    type: MockPlatformLocation\n  });\n}\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\",\n  version: \"19.2.14\",\n  ngImport: i0,\n  type: MockPlatformLocation,\n  decorators: [{\n    type: Injectable\n  }],\n  ctorParameters: () => [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [MOCK_PLATFORM_LOCATION_CONFIG]\n    }, {\n      type: Optional\n    }]\n  }]\n});\n/**\n * Mock implementation of URL state.\n */\nclass FakeNavigationPlatformLocation {\n  _platformNavigation;\n  constructor() {\n    const platformNavigation = inject(PlatformNavigation);\n    if (!(platformNavigation instanceof _FakeNavigation)) {\n      throw new Error('FakePlatformNavigation cannot be used without FakeNavigation. Use ' + '`provideFakeNavigation` to have all these services provided together.');\n    }\n    this._platformNavigation = platformNavigation;\n  }\n  config = inject(MOCK_PLATFORM_LOCATION_CONFIG, {\n    optional: true\n  });\n  getBaseHrefFromDOM() {\n    return this.config?.appBaseHref ?? '';\n  }\n  onPopState(fn) {\n    this._platformNavigation.window.addEventListener('popstate', fn);\n    return () => this._platformNavigation.window.removeEventListener('popstate', fn);\n  }\n  onHashChange(fn) {\n    this._platformNavigation.window.addEventListener('hashchange', fn);\n    return () => this._platformNavigation.window.removeEventListener('hashchange', fn);\n  }\n  get href() {\n    return this._platformNavigation.currentEntry.url;\n  }\n  get protocol() {\n    return new URL(this._platformNavigation.currentEntry.url).protocol;\n  }\n  get hostname() {\n    return new URL(this._platformNavigation.currentEntry.url).hostname;\n  }\n  get port() {\n    return new URL(this._platformNavigation.currentEntry.url).port;\n  }\n  get pathname() {\n    return new URL(this._platformNavigation.currentEntry.url).pathname;\n  }\n  get search() {\n    return new URL(this._platformNavigation.currentEntry.url).search;\n  }\n  get hash() {\n    return new URL(this._platformNavigation.currentEntry.url).hash;\n  }\n  pushState(state, title, url) {\n    this._platformNavigation.pushState(state, title, url);\n  }\n  replaceState(state, title, url) {\n    this._platformNavigation.replaceState(state, title, url);\n  }\n  forward() {\n    this._platformNavigation.forward();\n  }\n  back() {\n    this._platformNavigation.back();\n  }\n  historyGo(relativePosition = 0) {\n    this._platformNavigation.go(relativePosition);\n  }\n  getState() {\n    return this._platformNavigation.currentEntry.getHistoryState();\n  }\n  static ɵfac = i0.ɵɵngDeclareFactory({\n    minVersion: \"12.0.0\",\n    version: \"19.2.14\",\n    ngImport: i0,\n    type: FakeNavigationPlatformLocation,\n    deps: [],\n    target: i0.ɵɵFactoryTarget.Injectable\n  });\n  static ɵprov = i0.ɵɵngDeclareInjectable({\n    minVersion: \"12.0.0\",\n    version: \"19.2.14\",\n    ngImport: i0,\n    type: FakeNavigationPlatformLocation\n  });\n}\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\",\n  version: \"19.2.14\",\n  ngImport: i0,\n  type: FakeNavigationPlatformLocation,\n  decorators: [{\n    type: Injectable\n  }],\n  ctorParameters: () => []\n});\nconst FAKE_NAVIGATION = new InjectionToken('fakeNavigation', {\n  providedIn: 'root',\n  factory: () => {\n    const config = inject(MOCK_PLATFORM_LOCATION_CONFIG, {\n      optional: true\n    });\n    const baseFallback = 'http://_empty_/';\n    const startUrl = new URL(config?.startUrl || baseFallback, baseFallback);\n    // TODO(atscott): If we want to replace MockPlatformLocation with FakeNavigationPlatformLocation\n    // as the default in TestBed, we will likely need to use setSynchronousTraversalsForTesting(true);\n    return new _FakeNavigation(inject(DOCUMENT), startUrl.href);\n  }\n});\n/**\n * Return a provider for the `FakeNavigation` in place of the real Navigation API.\n */\nfunction provideFakePlatformNavigation() {\n  return [{\n    provide: PlatformNavigation,\n    useFactory: () => inject(FAKE_NAVIGATION)\n  }, {\n    provide: PlatformLocation,\n    useClass: FakeNavigationPlatformLocation\n  }];\n}\n\n/**\n * A spy for {@link Location} that allows tests to fire simulated location events.\n *\n * @publicApi\n */\nclass SpyLocation {\n  urlChanges = [];\n  _history = [new LocationState('', '', null)];\n  _historyIndex = 0;\n  /** @internal */\n  _subject = new Subject();\n  /** @internal */\n  _basePath = '';\n  /** @internal */\n  _locationStrategy = null;\n  /** @internal */\n  _urlChangeListeners = [];\n  /** @internal */\n  _urlChangeSubscription = null;\n  /** @docs-private */\n  ngOnDestroy() {\n    this._urlChangeSubscription?.unsubscribe();\n    this._urlChangeListeners = [];\n  }\n  setInitialPath(url) {\n    this._history[this._historyIndex].path = url;\n  }\n  setBaseHref(url) {\n    this._basePath = url;\n  }\n  path() {\n    return this._history[this._historyIndex].path;\n  }\n  getState() {\n    return this._history[this._historyIndex].state;\n  }\n  isCurrentPathEqualTo(path, query = '') {\n    const givenPath = path.endsWith('/') ? path.substring(0, path.length - 1) : path;\n    const currPath = this.path().endsWith('/') ? this.path().substring(0, this.path().length - 1) : this.path();\n    return currPath == givenPath + (query.length > 0 ? '?' + query : '');\n  }\n  simulateUrlPop(pathname) {\n    this._subject.next({\n      'url': pathname,\n      'pop': true,\n      'type': 'popstate'\n    });\n  }\n  simulateHashChange(pathname) {\n    const path = this.prepareExternalUrl(pathname);\n    this.pushHistory(path, '', null);\n    this.urlChanges.push('hash: ' + pathname);\n    // the browser will automatically fire popstate event before each `hashchange` event, so we need\n    // to simulate it.\n    this._subject.next({\n      'url': pathname,\n      'pop': true,\n      'type': 'popstate'\n    });\n    this._subject.next({\n      'url': pathname,\n      'pop': true,\n      'type': 'hashchange'\n    });\n  }\n  prepareExternalUrl(url) {\n    if (url.length > 0 && !url.startsWith('/')) {\n      url = '/' + url;\n    }\n    return this._basePath + url;\n  }\n  go(path, query = '', state = null) {\n    path = this.prepareExternalUrl(path);\n    this.pushHistory(path, query, state);\n    const locationState = this._history[this._historyIndex - 1];\n    if (locationState.path == path && locationState.query == query) {\n      return;\n    }\n    const url = path + (query.length > 0 ? '?' + query : '');\n    this.urlChanges.push(url);\n    this._notifyUrlChangeListeners(path + _normalizeQueryParams(query), state);\n  }\n  replaceState(path, query = '', state = null) {\n    path = this.prepareExternalUrl(path);\n    const history = this._history[this._historyIndex];\n    history.state = state;\n    if (history.path == path && history.query == query) {\n      return;\n    }\n    history.path = path;\n    history.query = query;\n    const url = path + (query.length > 0 ? '?' + query : '');\n    this.urlChanges.push('replace: ' + url);\n    this._notifyUrlChangeListeners(path + _normalizeQueryParams(query), state);\n  }\n  forward() {\n    if (this._historyIndex < this._history.length - 1) {\n      this._historyIndex++;\n      this._subject.next({\n        'url': this.path(),\n        'state': this.getState(),\n        'pop': true,\n        'type': 'popstate'\n      });\n    }\n  }\n  back() {\n    if (this._historyIndex > 0) {\n      this._historyIndex--;\n      this._subject.next({\n        'url': this.path(),\n        'state': this.getState(),\n        'pop': true,\n        'type': 'popstate'\n      });\n    }\n  }\n  historyGo(relativePosition = 0) {\n    const nextPageIndex = this._historyIndex + relativePosition;\n    if (nextPageIndex >= 0 && nextPageIndex < this._history.length) {\n      this._historyIndex = nextPageIndex;\n      this._subject.next({\n        'url': this.path(),\n        'state': this.getState(),\n        'pop': true,\n        'type': 'popstate'\n      });\n    }\n  }\n  onUrlChange(fn) {\n    this._urlChangeListeners.push(fn);\n    this._urlChangeSubscription ??= this.subscribe(v => {\n      this._notifyUrlChangeListeners(v.url, v.state);\n    });\n    return () => {\n      const fnIndex = this._urlChangeListeners.indexOf(fn);\n      this._urlChangeListeners.splice(fnIndex, 1);\n      if (this._urlChangeListeners.length === 0) {\n        this._urlChangeSubscription?.unsubscribe();\n        this._urlChangeSubscription = null;\n      }\n    };\n  }\n  /** @internal */\n  _notifyUrlChangeListeners(url = '', state) {\n    this._urlChangeListeners.forEach(fn => fn(url, state));\n  }\n  subscribe(onNext, onThrow, onReturn) {\n    return this._subject.subscribe({\n      next: onNext,\n      error: onThrow ?? undefined,\n      complete: onReturn ?? undefined\n    });\n  }\n  normalize(url) {\n    return null;\n  }\n  pushHistory(path, query, state) {\n    if (this._historyIndex > 0) {\n      this._history.splice(this._historyIndex + 1);\n    }\n    this._history.push(new LocationState(path, query, state));\n    this._historyIndex = this._history.length - 1;\n  }\n  static ɵfac = i0.ɵɵngDeclareFactory({\n    minVersion: \"12.0.0\",\n    version: \"19.2.14\",\n    ngImport: i0,\n    type: SpyLocation,\n    deps: [],\n    target: i0.ɵɵFactoryTarget.Injectable\n  });\n  static ɵprov = i0.ɵɵngDeclareInjectable({\n    minVersion: \"12.0.0\",\n    version: \"19.2.14\",\n    ngImport: i0,\n    type: SpyLocation\n  });\n}\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\",\n  version: \"19.2.14\",\n  ngImport: i0,\n  type: SpyLocation,\n  decorators: [{\n    type: Injectable\n  }]\n});\nclass LocationState {\n  path;\n  query;\n  state;\n  constructor(path, query, state) {\n    this.path = path;\n    this.query = query;\n    this.state = state;\n  }\n}\n\n/**\n * A mock implementation of {@link LocationStrategy} that allows tests to fire simulated\n * location events.\n *\n * @publicApi\n */\nclass MockLocationStrategy extends LocationStrategy {\n  internalBaseHref = '/';\n  internalPath = '/';\n  internalTitle = '';\n  urlChanges = [];\n  /** @internal */\n  _subject = new Subject();\n  stateChanges = [];\n  constructor() {\n    super();\n  }\n  simulatePopState(url) {\n    this.internalPath = url;\n    this._subject.next(new _MockPopStateEvent(this.path()));\n  }\n  path(includeHash = false) {\n    return this.internalPath;\n  }\n  prepareExternalUrl(internal) {\n    if (internal.startsWith('/') && this.internalBaseHref.endsWith('/')) {\n      return this.internalBaseHref + internal.substring(1);\n    }\n    return this.internalBaseHref + internal;\n  }\n  pushState(ctx, title, path, query) {\n    // Add state change to changes array\n    this.stateChanges.push(ctx);\n    this.internalTitle = title;\n    const url = path + (query.length > 0 ? '?' + query : '');\n    this.internalPath = url;\n    const externalUrl = this.prepareExternalUrl(url);\n    this.urlChanges.push(externalUrl);\n  }\n  replaceState(ctx, title, path, query) {\n    // Reset the last index of stateChanges to the ctx (state) object\n    this.stateChanges[(this.stateChanges.length || 1) - 1] = ctx;\n    this.internalTitle = title;\n    const url = path + (query.length > 0 ? '?' + query : '');\n    this.internalPath = url;\n    const externalUrl = this.prepareExternalUrl(url);\n    this.urlChanges.push('replace: ' + externalUrl);\n  }\n  onPopState(fn) {\n    this._subject.subscribe({\n      next: fn\n    });\n  }\n  getBaseHref() {\n    return this.internalBaseHref;\n  }\n  back() {\n    if (this.urlChanges.length > 0) {\n      this.urlChanges.pop();\n      this.stateChanges.pop();\n      const nextUrl = this.urlChanges.length > 0 ? this.urlChanges[this.urlChanges.length - 1] : '';\n      this.simulatePopState(nextUrl);\n    }\n  }\n  forward() {\n    throw 'not implemented';\n  }\n  getState() {\n    return this.stateChanges[(this.stateChanges.length || 1) - 1];\n  }\n  static ɵfac = i0.ɵɵngDeclareFactory({\n    minVersion: \"12.0.0\",\n    version: \"19.2.14\",\n    ngImport: i0,\n    type: MockLocationStrategy,\n    deps: [],\n    target: i0.ɵɵFactoryTarget.Injectable\n  });\n  static ɵprov = i0.ɵɵngDeclareInjectable({\n    minVersion: \"12.0.0\",\n    version: \"19.2.14\",\n    ngImport: i0,\n    type: MockLocationStrategy\n  });\n}\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\",\n  version: \"19.2.14\",\n  ngImport: i0,\n  type: MockLocationStrategy,\n  decorators: [{\n    type: Injectable\n  }],\n  ctorParameters: () => []\n});\nclass _MockPopStateEvent {\n  newUrl;\n  pop = true;\n  type = 'popstate';\n  constructor(newUrl) {\n    this.newUrl = newUrl;\n  }\n}\n\n/**\n * Returns mock providers for the `Location` and `LocationStrategy` classes.\n * The mocks are helpful in tests to fire simulated location events.\n *\n * @publicApi\n */\nfunction provideLocationMocks() {\n  return [{\n    provide: Location,\n    useClass: SpyLocation\n  }, {\n    provide: LocationStrategy$1,\n    useClass: MockLocationStrategy\n  }];\n}\nexport { MOCK_PLATFORM_LOCATION_CONFIG, MockLocationStrategy, MockPlatformLocation, SpyLocation, provideLocationMocks, provideFakePlatformNavigation as ɵprovideFakePlatformNavigation };\n"],"mappings":"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","names":[],"x_google_ignoreList":[0,1,2,3,4]}